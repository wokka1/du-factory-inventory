{
    "slots":{
        "0":{"name":"slot1","type":{"events":[],"methods":[]}},
        "1":{"name":"slot2","type":{"events":[],"methods":[]}},
        "2":{"name":"slot3","type":{"events":[],"methods":[]}},
        "3":{"name":"slot4","type":{"events":[],"methods":[]}},
        "4":{"name":"slot5","type":{"events":[],"methods":[]}},
        "5":{"name":"slot6","type":{"events":[],"methods":[]}},
        "6":{"name":"slot7","type":{"events":[],"methods":[]}},
        "7":{"name":"slot8","type":{"events":[],"methods":[]}},
        "8":{"name":"slot9","type":{"events":[],"methods":[]}},
        "9":{"name":"slot10","type":{"events":[],"methods":[]}},
        "-1":{"name":"unit","type":{"events":[],"methods":[]}},
        "-2":{"name":"construct","type":{"events":[],"methods":[]}},
        "-3":{"name":"player","type":{"events":[],"methods":[]}},
        "-4":{"name":"system","type":{"events":[],"methods":[]}},
        "-5":{"name":"library","type":{"events":[],"methods":[]}}
    },
    "handlers":[
        {"code":"local debugIndex = 0\nlocal function debugPrint(msg)\n    if screen then\n        screen.addText(0, debugIndex * 2.5, 2.5, msg)\n        debugIndex = debugIndex + 1\n    end\n    system.print(msg)\nend\n\nlocal startTime = system.getArkTime()\nlocal function getElapsed()\n    return string.format(\"%.1fs\", system.getArkTime() - startTime)\nend\n\n-- Find container in slot 8\nlocal container = nil\nfor slot_name, slot in pairs(unit) do\n    if slot_name == \"slot8\" then\n        if type(slot) == \"table\" and slot.getClass then\n            local className = slot.getClass()\n            if string.match(className, \"Container\") then\n                container = slot\n                debugPrint(\"Found slot8: Container ID \" .. container.getLocalId())\n                debugPrint(\"Class: \" .. className)\n                break\n            end\n        end\n    end\nend\n\nif not container then\n    debugPrint(\"ERROR: No container in slot8\")\n    unit.exit()\nend\n\n_G.container = container\n_G.debugPrint = debugPrint\n_G.getElapsed = getElapsed\n_G.eventCount = 0\n\ndebugPrint(\"===================================\")\ndebugPrint(\"DIAGNOSTIC TEST\")\ndebugPrint(\"===================================\")\ndebugPrint(\"\")\n\n-- Test 1: Try getContent WITHOUT updateContent\ndebugPrint(\"[\" .. getElapsed() .. \"] TEST 1: getContent() without updateContent()\")\nlocal items1 = container.getContent()\ndebugPrint(\"[\" .. getElapsed() .. \"] Items: \" .. #items1)\nif #items1 > 0 then\n    for _, item in pairs(items1) do\n        local itemData = system.getItem(item.id)\n        debugPrint(\"[\" .. getElapsed() .. \"]   - \" .. itemData.displayName .. \" x\" .. item.quantity)\n    end\nend\ndebugPrint(\"\")\n\n-- Test 2: Call updateContent and check result\ndebugPrint(\"[\" .. getElapsed() .. \"] TEST 2: Call updateContent()\")\nlocal result = container.updateContent()\ndebugPrint(\"[\" .. getElapsed() .. \"] Result: \" .. tostring(result))\nif result and result > 0 then\n    debugPrint(\"[\" .. getElapsed() .. \"] COOLDOWN: \" .. string.format(\"%.2f\", result) .. \"s remaining\")\nelse\n    debugPrint(\"[\" .. getElapsed() .. \"] ACCEPTED (or nil)\")\nend\ndebugPrint(\"\")\n\n-- Test 3: Try getContent immediately after\ndebugPrint(\"[\" .. getElapsed() .. \"] TEST 3: getContent() immediately after\")\nlocal items2 = container.getContent()\ndebugPrint(\"[\" .. getElapsed() .. \"] Items: \" .. #items2)\nif #items2 > 0 then\n    for _, item in pairs(items2) do\n        local itemData = system.getItem(item.id)\n        debugPrint(\"[\" .. getElapsed() .. \"]   - \" .. itemData.displayName .. \" x\" .. item.quantity)\n    end\nend\ndebugPrint(\"\")\n\n-- Test 4: Monitor for onContentUpdate events\ndebugPrint(\"[\" .. getElapsed() .. \"] TEST 4: Monitoring for onContentUpdate events...\")\ndebugPrint(\"[\" .. getElapsed() .. \"] Waiting 35 seconds to see if event fires...\")\ndebugPrint(\"[\" .. getElapsed() .. \"] (Event handler registered for slot8)\")\ndebugPrint(\"\")\n\nunit.setTimer(\"finish\", 35)\n","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"},
        {"code":"_G.eventCount = _G.eventCount + 1\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] >>> onContentUpdate EVENT #\" .. _G.eventCount .. \" FIRED!\")\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] >>> Calling getContent() in response...\")\nlocal items = _G.container.getContent()\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] >>> Items: \" .. #items)\nif #items > 0 then\n    for _, item in pairs(items) do\n        local itemData = system.getItem(item.id)\n        _G.debugPrint(\"[\" .. _G.getElapsed() .. \"]   - \" .. itemData.displayName .. \" x\" .. item.quantity)\n    end\n    _G.debugPrint(\"[\" .. _G.getElapsed() .. \"] >>> SUCCESS FROM EVENT!\")\nelse\n    _G.debugPrint(\"[\" .. _G.getElapsed() .. \"] >>> Still no items\")\nend\n_G.debugPrint(\"\")","filter":{"args":[],"signature":"onContentUpdate()","slotKey":"7"},"key":"1"},
        {"code":"_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] TEST 5: Final getContent() check\")\nlocal items = _G.container.getContent()\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] Items: \" .. #items)\nif #items > 0 then\n    for _, item in pairs(items) do\n        local itemData = system.getItem(item.id)\n        _G.debugPrint(\"[\" .. _G.getElapsed() .. \"]   - \" .. itemData.displayName .. \" x\" .. item.quantity)\n    end\nend\n_G.debugPrint(\"\")\n_G.debugPrint(\"===================================\")\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] DIAGNOSTIC COMPLETE\")\n_G.debugPrint(\"[\" .. _G.getElapsed() .. \"] onContentUpdate events: \" .. _G.eventCount)\n_G.debugPrint(\"===================================\")\nunit.exit()","filter":{"args":[{"value":"finish"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"2"}
    ],
    "methods":[],
    "events":[]
}
